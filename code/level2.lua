-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["level2-a"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "level2-a", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   56, 150.5  ,  -56, 152.5  ,  -23, 83.5  ,  54, 96.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "level2-a", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -46, -149.5  ,  -25, -150.5  ,  -23, 83.5  ,  -56, 152.5  }
                    }
                    
                    
                    
		}
		
		, 
		["level2-b"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "level2-b", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -63.5, -10  ,  73.5, -15  ,  116.5, 50  ,  -115.5, 54  ,  -117.5, -4  }
                    }
                     ,
                    {
                    pe_fixture_id = "level2-b", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   116.5, 50  ,  73.5, -15  ,  118.5, -14  }
                    }
                     ,
                    {
                    pe_fixture_id = "level2-b", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   73.5, -15  ,  -63.5, -10  ,  -12.5, -53  ,  45.5, -51  }
                    }
                    
                    
                    
		}
		
		, 
		["level2-c"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "level2-c", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -170, -28  ,  174, -31  ,  170, 28  ,  -175, 34  }
                    }
                    
                    
                    
		}
		
		, 
		["level2-d"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "level2-d", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -15, 78  ,  76, 152  ,  -89, 142  ,  -79, 83  }
                    }
                     ,
                    {
                    pe_fixture_id = "level2-d", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   28, 55  ,  76, 152  ,  -15, 78  }
                    }
                     ,
                    {
                    pe_fixture_id = "level2-d", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   46, 28  ,  76, 152  ,  28, 55  }
                    }
                     ,
                    {
                    pe_fixture_id = "level2-d", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   89, -148  ,  76, 152  ,  46, 28  ,  50, -150  }
                    }
                    
                    
                    
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
                    end
                end
        end
	
	function physics:get(name)
		return unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

